@page "/regexcsv"

@using System.Text.RegularExpressions;
@using System.Linq;


<h1>Regex CSV Extractor</h1>

<div class="form-group">
    <label for="patternInput">Pattern</label>
    <input class="form-control" id="patternInput" placeholder="(?<group>.)" @bind="_pattern"/>
</div>
<div class="form-group">
    <label for="dataInput">Data</label>
    <textarea class="form-control" id="dataInput" rows="5" @bind="_data"/>
</div>
<button class="btn btn-primary btn-lg" role="button" @onclick="OnProcess">Process</button>

<br/>

@if(_ex != null) {
    <p class="monospaced" style="color: red">@_ex</p>
}

@if(_matches != null) {
    <table class="table table-bordered table-striped responsive-utilities">
        <thead>
            <tr>
                <th class="is-hidden" scope="col"></th>
                @foreach (var group in _rex.GetGroupNames().Skip(1)) {
                    <th class="is-hidden" scope="col">@group</th>
                }
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < _matches.Count; i++)
            {
                var m = _matches[i];
                <tr>
                    <td class="is-hidden">@i</td>
                    @foreach (var v in (m.Groups as IEnumerable<Group>).Skip(1))
                    {
                        <td class="is-visible">@v</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    string _pattern = "";
    string _data = "";
    
    Regex _rex = null;

    MatchCollection _matches = null;
    Exception _ex = null;

    void OnProcess() {
        _matches = null;
        _ex = null;

        try {
            _rex = new Regex(_pattern);
            _matches = _rex.Matches(_data);
        } catch (Exception ex) {
            _ex = ex;
        }
    }
}